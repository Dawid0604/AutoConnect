name: Coverage, SonarQube, Dockerize

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build, test and aggregate coverage (fail if coverage < 80%)
        run: mvn clean verify

      - name: Upload JaCoCo aggregate report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-aggregate-report
          path: report-aggregate/target/site/jacoco-aggregate/jacoco.xml

  codeql-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: java

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  code-coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: report-aggregate/target/site/jacoco-aggregate/jacoco.xml
          fail_ci_if_error: true

  dockerize:
    needs: [ build, codeql-analysis, code-coverage ]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build images and publish for all modules
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

        run: |
          set -e
          DATE=$(date +%Y%m%d)
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          BRANCH_NAME_CLEAN=$(echo "$BRANCH_NAME" | tr '/' '-')
          TAG="${BRANCH_NAME_CLEAN}-${DATE}-${GITHUB_SHA::7}"
     
          for pom in $(find services -mindepth 2 -maxdepth 3 -type d -name application); do
          DIR=$(dirname "$pom")
          MODULE=$(basename "$DIR")
          
          mvn -pl "$pom" clean compile jib:build -am -DskipTests \
           -Dimage=${DOCKERHUB_USERNAME}/autoconnect-${MODULE}:${TAG} \
           -Ddocker.publishRegistry.username=${DOCKERHUB_USERNAME} \
           -Ddocker.publishRegistry.password=${DOCKERHUB_TOKEN}
          done